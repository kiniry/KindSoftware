<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<title>KindSoftware GLOBAN 2008 Summer School Course</title>

<link rel="stylesheet" type="text/css" media="screen" href="/stylesheets/kind.css" />

<meta http-equiv="Content-type" content="text/html; charset=iso-8859-1" />
<meta http-equiv="Content-Language" content="en-us" />
<meta name="ROBOTS" content="ALL" />
<meta name="Copyright" content="Copyright (c) 2004-2005 Joseph Kiniry, KindSoftware LLC" />
<meta http-equiv="imagetoolbar" content="no" />
<meta name="MSSmartTagsPreventParsing" content="true" />

<meta name="description" content="formal methods in software engineering" />
<meta name="keywords" content="formal methods, kindsoftware" />

<link rel="help" href="http://www.kindsoftware.com/about/" title="Site Information" />

<meta name="Rating" content="General" />
<meta name="doc-class" content="Living Document" />

</head>

<body onload="window.defaultStatus='KindSoftware'" id="sectionthree">


<div id="theory">
<div id="wrapper">

<!-- Kindsoftware Logo in Header -->

<!--#include virtual="/xml/logo_header.xml" -->

<div id="wrapper2">

<!-- Top Level Menu -->

<!--#include virtual="/xml/top_level_menu.xml" -->

<!-- End Top Level Menu -->

<!-- Main page on left and sidebar on right -->
<div id="pagebody">

<!-- Sidebar -->
<div id="sidebar">

<!-- Nature Photo -->
<img src="/images/aster.jpg" border="0" width="180" height="100" alt="Documents" name="aster" />

<!-- Sub menu within sidebar -->
<!-- All secondary menus are hidden except the ones under "subnavon" -->
<div id="subnav">
<ul>
  <li>
  <!--#include virtual="/documents/xml/overview.xml" -->
  </li>
  <li>
  <!--#include virtual="/documents/xml/mech_theory.xml" -->
  </li>
  <li>
  <!--#include virtual="/documents/xml/news.xml" -->
  </li>
  <li>
  <!--#include virtual="/documents/xml/proposals.xml" -->
  </li>
  <li>
  <!--#include virtual="/documents/xml/published.xml" -->
  </li>
  <li>
  <!--#include virtual="/documents/xml/reports.xml" -->
  </li>
  <li>
  <!--#include virtual="/documents/xml/talks.xml" -->
  </li>
  <li id="subnavon">
  <!--#include virtual="/documents/xml/tutorials.xml" -->
  </li>
  <li>
  <!--#include virtual="/documents/xml/whitepapers.xml" -->
  </li>
</ul>
</div>
<!-- End submenus -->

</div>
<!-- End Sidebar -->

<!-- Main content on left side -->
<div id="maincontent">
<h2 align="center">Verification-centric Software Engineering</h2>

<h2 align="center" class="subtitle">A <a
href="http://www.mimuw.edu.pl/~globan08/">GLOBAN</a> Summer School
Course</h2>

<h3 align="center" class="subtitle">Date: 22-23 September 2008 <br />
Location: Institute of Informatics, University of Warsaw, Warsaw, Poland</h3>

<h3 align="center" class="author">Instructor:
<a href="/about/people/jrk.html">Joe Kiniry</a> </h3>

<h4>Tutorial materials prepared with the able assistance of: 
<a href="/about/people/drc.html">David Cok</a>,
<a href="/about/people/fdf.html">Fintan Fairmichael</a>, 
<a href="http://www.eecs.ucf.edu/~leavens/homepage.html">Gary Leavens</a>,
<a href="http://www.cs.ru.nl/~erikpoll/">Erik Poll</a>,
and
<a href="/about/people/dmz.html">Dan Zimmerman</a></h4>

<h3>Abstract</h3>

<p> This series of talks focus on the practical aspects of designing,
constructing, and validating global computing software systems. A
suite of robust academic tools, many of which were developed under the
EU FP6 MOBIUS project, which are part of the MOBIUS Program
Verification Environment (PVE), are summarized and demonstrated. </p>

<p> The first talk gives an overview of the tools options available
today, including tools used in this series of talks and others. The
second talk focuses on the practical aspects of designing systems for
verification. The third talk focuses on refining designs into
implementations and validating those designs and refinements via
various static checking techniques and automated testing. The final
talk focuses on using interactive and automatic theorem provers to
perform full functional verification. </p>

<p> Participants are given the latest release of the MOBIUS PVE and
other related tools on a CD-ROM or USB key. </p>

<!-- <h3>Details</h3> -->

<!-- <p> This tutorial introduces the BON specification language and BONc -->
<!-- tool, the JML annotation language and tool suite, and ESC/Java2 -->
<!-- via their integrated and interactive use within the Eclipse IDE. </p> -->

<!-- <p> <a href="http://www.bon-method.com/">BON</a> is a high-level -->
<!-- textual and graphical systems specification language.  BON supports -->
<!-- seamless, reversible system specification from concept, requirements, -->
<!-- and feature analysis all the way down to formal contracts of -->
<!-- object-oriented and structured systems.  <a -->
<!-- href="/products/opensource/BONc/">BONc</a> is a tool suite for using -->
<!-- the BON specification language. It currently supports parsing, -->
<!-- typechecking, and generating XHTML documentation for BON -->
<!-- specifications. </p> -->

<!-- <p> The <a href="http://www.jmlspecs.org/">Java Modeling Language</a> -->
<!-- (JML) is a behavioral interface specification language that can be -->
<!-- used to specify the behavior of Java modules. It combines the Design -->
<!-- by Contract approach of Eiffel and the model-based specification -->
<!-- approach of the Larch family of interface specification languages, -->
<!-- with some elements of the refinement calculus. JML has a Java-based -->
<!-- syntax and semantics, thus is easy to learn for Java programmers. </p> -->

<!-- <p> <a href="/products/opensource/ESCJava2/">ESC/Java2</a> -->
<!-- is a tool that checks that a program is consistent with its -->
<!-- annotation. It also detects, at compile time, common programming -->
<!-- errors that ordinarily are not detected until run time, and sometimes -->
<!-- not even then; for example, null dereference errors, array bounds -->
<!-- errors, type cast errors, and race conditions. While ESC/Java uses a -->
<!-- theorem prover, it feels to a programmer more like a powerful type -->
<!-- checker. </p> -->

<!-- <p> Because (1) BON is a simple language which has the look-and-feel -->
<!-- of English, (2) JML is familiar to Java programmers, and (3) ESC/Java2 -->
<!-- just feels like a typechecker, we believe that they are an excellent -->
<!-- way to gently introduce programmers to formal methods. </p> -->

<!-- <p> ESC/Java2 and JML have been deeply integrated into the Eclipse -->
<!-- development environment, under the auspices of the European Union -->
<!-- Framework 6 research program -->
<!-- "<a href="http://mobius.inria.fr/">Mobius</a>".  Within this large -->
<!-- research project, many tools and technologies have been integrated to -->
<!-- construct the <em>Mobius Program Verification Environment</em> (PVE), -->
<!-- a customized version of Eclipse.  The PVE looks and feels like -->
<!-- Eclipse, but has numerous capabilities that helps one focus on program -->
<!-- analysis, design, development, testing, verification, and maintenance -->
<!-- using hidden, powerful static checkers, theorem provers, and -->
<!-- more.  BONc will be integrated into a future version of the PVE. </p> -->

<h3>Attendee Background</h3>

<p> Any Java programmer who wishes to improve the quality of their
software should attend. Also, educators who want to use BON, JML,
and/or ESC/Java2 in teaching, as a gentle way to introduce students to
state-of-the-art specification and verification techniques and tools
supporting formal methods, should also attend this tutorial. </p>

<h3>Objectives</h3>

<p> Attendees will come out of this tutorial with a firm understanding
of the use of specifications in software design and engineering, a
basic knowledge of the BON and JML specification languages, and will
be knowledgeable about the various tools available for the BON and JML
languages, particularly BONc and ESC/Java2. </p>

<h3>Tutorial History</h3>

<p> Variations of this tutorial have been presented to over a hundred
academics and several hundred undergraduate and postgraduate students
over the past several years.  The first version of this tutorial was
one of the most successful tutorials at <a
href="http://www.ifi.uio.no/ecoop2004/">ECOOP 2004</a>.  Extensive
slides, homework assignments, and an ongoing book on JML and ESC/Java2
are available.  Alternate versions of this tutorial have also been given
at several other top academic conferences, including ECOOP, ETAPS, FM,
TOOLS, and FMCO. </p>

<h3>Biography</h3>

<p> <strong>Joseph Kiniry, University College Dublin</strong> <br />
Joe is a lecturer in the School of Computer Science and Informatics at
University College Dublin.  He was previously in the SoS Group at
Radboud University Nijmegen. He earned his Ph.D. in Computer Science
from the California Institute of Technology.  Joe is the coauthor of
ESC/Java2 and has contributed to, or led the development of, several
other verification tools including
<a href="/products/opensource/BONc/">BONc</a>,
<a href="/products/opensource/FreeBoogie/">FreeBoogie</a>,
<a href="/products/opensource/Simplify/">Simplify</a>,
<a href="http://nemerle.org/~malekith/smt/en.html">Fx7</a>,
<a href="http://www.jmlspecs.org/">the JML tool suite</a>,
<a href="http://pvs.csl.sri.com/">PVS</a>,
<a href="http://portal.acm.org/citation.cfm?id=694447">the LOOP compiler</a>, and, of course,
<a href="/products/opensource/Mobius/">the Mobius PVE</a>. </p>

<h3>Registration</h3>

<p> Please see the <a href="http://www.mimuw.edu.pl/~globan08/">main
GLOBAN website</a> for how to register for the Summer School. </p>

<h3>Slides</h3>

<p> The slides presented in this tutorial are here: </p>
<ul>
  <li> <a href="slides/GLOBAN_introduction.pdf">The Mobius Program
      Verification Environment</a> (slide set 1) </li>
  <li> <a href="slides/GLOBAN08.pdf">Verification-centric Software
      Development with BON, JML, and ESC/Java2</a> </li>
</ul>

<h3>Exam</h3>

<p> The exam for this course is included in the following workspace in
the project named <em>GLOBAN</em>.  This workspace also includes many
of the examples discussed in the GLOBAN slides and in past
tutorials. </p>
<ul>
  <li><a href="software/workspace-globan08.tgz">GLOBAN Examples and
      Exam Workspace</a></li>
</ul>

<h3>Resources</h3>

<p> The following resources are available for all interested in JML
and ESC/Java, whether you decide to attend our tutorial or not. </p>

<ul>
  <li> Primary Tools for the Tutorial
      <ul>
        <li> The Mobius Program Verification Environment (PVE): <a href="/products/opensource/Mobius/"><code>http://www.kindsoftware.com/products/opensource/Mobius/</code></a>
        <li> The BONc tool suite: <a href="/products/opensource/BONc/"><code>http://www.kindsoftware.com/products/opensource/BONc/</code></a>
        <li> ESC/Java2: <a href="/products/opensource/ESCJava2/"><code>http://www.kindsoftware.com/products/opensource/ESCJava2/</code></a> </li>
        <li> The JML tool suite: <a href="http://www.jmlspecs.org/"><code>http://www.jmlspecs.org/</code></a> </li>
      </ul></li>
<!--   <li> Other Publicly Available Tools that Use JML </li> -->
<!--       <ul> -->
<!--         <li> The Daikon invariant detector: <a href="http://pag.csail.mit.edu/daikon/"><code>http://pag.csail.mit.edu/daikon/</code></a></li> -->
<!--         <li> The Bogor model checking framework: <a href="http://bogor.projects.cis.ksu.edu/index.shtml"><code>http://bogor.projects.cis.ksu.edu/index.shtml</code></a> </li> -->
<!--       </ul> -->
  <li> Papers
      <ul>
        <li> The Mobius PVE is described on the Mobius Tools Trac site located at
            <a href="/trac/mobius/">http://kindsoftware.com/trac/mobius/</a>. </li>
        <li> For a good overview of JML and the tools available, read
            <a href="ftp://ftp.cs.iastate.edu/pub/leavens/JML/jml-white-paper.pdf"><em>An Overview of JML Tools and Applications</em></a> </li>
        <li> For background, history, and motivations of the design of JML, see
            <a href="ftp://ftp.cs.iastate.edu/pub/techreports/TR00-15/TR.pdf"><em>JML: Notations and Tools Supporting Detailed Design in Java</em></a> </li>
        <li> For an overview of using JML to support Design by Contract in Java, see
            <a href="ftp://ftp.cs.iastate.edu/pub/leavens/JML/jmldbc.pdf"><em>Design by Contract with JML</em></a> </li>
        <li> Many other papers on JML and related tools are available via the
            <a href="http://www.cs.iastate.edu/~leavens/JML/papers.shtml">JML papers web page</a>.
<!--             JML-related research sites mentioned above, -->
<!--             and quality digital libraries like those of the -->
<!--             <a href="http://portal.acm.org/dl.cfm">ACM</a>, -->
<!--             the <a href="http://www.computer.org/publications/dlib/">IEEE Computer Society</a>, -->
<!--             and <a href="http://citeseer.ist.psu.edu/cis">NEC CiteSeer</a>. -->
        </li>
      </ul></li>
  <li> Slides from Past Tutorials
      <ul>
        <li> <a href="slides/ETAPS08_tutorial.pdf">Verification-centric
            Software Development in Java with BON, JML, and ESC/Java2</a> </li>
        <li> <a href="slides/JMLTutorialPresentation.pdf">A JML
            Tutorial Modular Specification and Verification of
            Functional Behavior for Java</a> </li>
        <li> <a href="slides/1_intro_jml.pdf">Introduction to JML</a>
            (<a href="slides/1_intro_jml4up.pdf">4 up</a>) </li>
        <li> <a href="slides/2_tool.pdf">ESC/Java2: Use and Features</a>
            (<a href="slides/2_tool4up.pdf">4 up</a>) </li>
        <li> <a href="slides/3_warnings.pdf">ESC/Java2 Warnings</a>
            (<a href="slides/3_warnings4up.pdf">4up</a>) </li>
        <li> <a href="slides/4_tips.pdf">Specification Tips and Pitfalls</a>
            (<a href="slides/4_tips4up.pdf">4 up</a>) </li>
        <li> <a href="slides/5_more_jml.pdf">Advanced JML (and more Tips and Pitfalls)</a>
            (<a href="slides/5_more_jml4up.pdf">4 up</a>) </li>
        <li> <a href="slides/escjava_demo.pdf">ESC/Java: Extended Static
            Checking for Java</a> (a summary and non-interactive demonstration)</li>
        <li> <a href="../talks/Effectively_Using_JML.pdf">Effectively Using JML:
            Software Engineering Processes incorporating Formal
            Specification</a> </li>
        <li> <a href="../talks/Using_ESCJava2.pdf">Using ESC/Java2
            Architecture, Hints, and Tricks</a> </li>
        <li> <a href="../talks/Formal_Methods_for_VLSI.pdf">Using Formal
            Methods for VLSI Development: Using Java and JML in the Real
            World</a> </li>
        <li> <a href="../talks/JML_Models.pdf">Models are the `M' in
            JML: Using ADT Models in Formal Specification with JML</a> </li>
        <li> <a href="../talks/ESCJava2_Object_Logic.pdf">The
            ESC/Java2 Calculi and Object Logics: Implications on
            Specification and Verification</a> </li>
      </ul></li>
  <li> Homework
      <ul>
        <li> <a href="slides/jml_homework.pdf">JML and ESC/Java Homework
            Exercises</a> (learning JML and ESC/Java2 through hands-on work) </li>
      </ul>
  </li>
</ul>

</div>
</div>
<!-- End main content -->

<!-- Footer -->
<div id="footer"><p>Copyright &copy; 1993&#8211;2008 <a href="/">KindSoftware</a>. :: Page Last Updated: <!--#flastmod file="globan08.html" --> <br />Site Design and Photos by <a href="http://www.charawilliams.com">CAW</a> ::
<a href="http://validator.w3.org/check/referer">XHTML</a>, <a href="http://jigsaw.w3.org/css-validator/validator?uri=http://www.kindsoftware.com/stylesheets/kind.css">CSS</a>.</p></div>
</div>
<!-- End footer -->

</div>
</div>
</body>
</html>
